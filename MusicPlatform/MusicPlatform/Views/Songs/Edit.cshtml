@model MusicPlatform.Models.Song

@{
    ViewBag.Title = "Edit";
}


<br />
<hr class="mt-3" />
<main aria-labelledby="title" class="mt-2 d-flex justify-content-center">
    <div style="background: url('https://www.thisisdarkness.com/wp-content/uploads/2018/03/studio-2.jpg'); background-size: cover; background-position-y: 6rem;">
        <div class="rounded-2 col-5 p-5" style="width: 80rem; min-height: 37rem; background-color: rgba(0,0,0,0.9) ">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <div class="d-flex justify-content-between">
                        <h4>Song Editor</h4>
                        <a class="btn btn-outline-dark text-white pt-1" href="@Request.Headers["Referer"]">Back</a>
                    </div>
                    <hr />

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.ArtistId)
                    @Html.HiddenFor(model => model.AlbumId)
                    @Html.HiddenFor(model => model.Likes)

                    <div class="d-flex justify-content-between">
                        <div class="col-6">
                            <div class="form-group mb-3">
                                <div class="col-12">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { id = "Title", placeholder = "Song Title...", style = "min-width: 100%; filter: opacity(80%);", @class = "form-control btn btn-dark" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group mb-3">
                                <div class="col-12">
                                    @Html.EditorFor(model => model.VideoURL, new { htmlAttributes = new { id = "VideoURL", placeholder = "Video Url...", style = "min-width: 100%; filter: opacity(80%);", @class = "form-control btn btn-dark" } })
                                    @Html.ValidationMessageFor(model => model.VideoURL, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group mb-3">
                                <div class="col-12">
                                    @Html.EditorFor(model => model.AudioURL, new { htmlAttributes = new { id = "AudioURL", placeholder = "Audio Url...", style = "min-width: 100%; filter: opacity(80%);", @class = "form-control btn btn-dark" } })
                                    @Html.ValidationMessageFor(model => model.AudioURL, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group mb-3 d-flex justify-content-between">
                                <div class="col-6 m-0">
                                    @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label text-secondary" })
                                    @Html.DropDownList("Language", (SelectList)ViewBag.Languages, "Select a Language", new { size=8, style = "filter: opacity(80%);", id ="Language", @class = "form-control btn btn-dark" })
                                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-6 m-0">
                                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label text-secondary" })
                                    @Html.DropDownList("Genre", (SelectList)ViewBag.Genres, "Select a Genre", new { size = 8, style = "filter: opacity(80%);", id = "Genre", @class = "form-control btn btn-dark" })
                                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-5">
                            <div class="form-group mb-3">
                                <div class="col-12">
                                    @Html.TextAreaFor(model => model.Lyrics, new { id = "Lyrics", placeholder = "Song Lyrics...", style = "min-width: 100%; filter: opacity(80%);", @class = "form-control btn btn-dark", rows = 15 })
                                    @Html.ValidationMessageFor(model => model.Lyrics, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <div class="col-12">
                            <button type="submit" value="Save" class="btn btn-outline-dark text-white form-control" id="submit-button">Save Changes</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</main>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#Title, #VideoURL, #AudioURL, #Lyrics').change(function () {
            var source = $(this).val();

            if (source !== "") {
                $(this).removeClass("btn-outline-dark");
                $(this).addClass("btn-dark");
            } else {
                $(this).removeClass("btn-dark");
                $(this).addClass("btn-outline-dark");
            }
        });
    </script>
}
